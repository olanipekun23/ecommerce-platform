name: Deploy Backend to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build Backend Docker Image
      uses: docker/build-push-action@v5
      with:
        context: ./api
        tags: ecommerce-api
        load: true
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache

    - name: Save Backend Docker Image
      run: |
        docker save ecommerce-api > ecommerce-api.tar

    - name: Upload Docker Image to EC2
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        source: "ecommerce-api.tar"
        target: "/home/ubuntu/"
        overwrite: true
        debug: true

    - name: Deploy Backend on EC2
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          docker load < ecommerce-api.tar
          docker stop ecommerce-api || true
          docker rm ecommerce-api || true
          docker run -d --name ecommerce-api -p 80:5000 ecommerce-api
